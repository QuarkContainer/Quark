
1. change container runtime 
Enable tsot in config.json

set EnableTsot to true
set ShimMode to true
set PerSandboxLog to true

2. Start cadvisor/etcd

VERSION=v0.36.0 # use the latest release version from https://github.com/google/cadvisor/releases
sudo docker run \
  --volume=/:/rootfs:ro \
  --volume=/var/run:/var/run:ro \
  --volume=/sys:/sys:ro \
  --volume=/var/lib/docker/:/var/lib/docker:ro \
  --volume=/dev/disk/:/dev/disk:ro \
  --publish=8080:8080 \
  --detach=true \
  --name=cadvisor \
  --privileged \
  --device=/dev/kmsg \
  --rm \
  gcr.io/cadvisor/cadvisor:$VERSION

export NODE1=127.0.0.1
REGISTRY=quay.io/coreos/etcd

#docker volume create --name etcd-data
#export DATA_DIR="etcd-data"

sudo docker run \
  -p 2379:2379 \
  -p 2380:2380 \
  --rm \
  --name etcd ${REGISTRY}:latest \
  /usr/local/bin/etcd \
  --data-dir=/etcd-data --name node1 \
  --initial-advertise-peer-urls http://${NODE1}:2380 --listen-peer-urls http://0.0.0.0:2380 \
  --advertise-client-urls http://${NODE1}:2379 --listen-client-urls http://0.0.0.0:2379 \
  --initial-cluster node1=http://${NODE1}:2380

#--volume=${DATA_DIR}:/etcd-data \
  
3. Run services

# start state service
rm -f /var/log/quark/ss.log; sudo ./ss
# qlet
rm -f /var/log/quark/na.log; sudo ./na /etc/quark/node1.json
# gateway
sudo rm -f /var/log/quark/gateway.log; sudo ./gateway
# scheduler
sudo rm -f /var/log/quark/scheduler.log; sudo ./scheduler

4. verify etcd configuration

etcdctl get --prefix "/registry"

6. Create namespace

curl --header "Content-Type: application/json" \
  --request POST \
  --data '{"tenant":"t1", "namespace":"ns1", "revision": 0, "disable": false}' \
  http://localhost:4000/namespaces/

#7. CRUD funcpackage
curl --header "Content-Type: application/json" \
  --request POST \
  --data '{"tenant":"t1", "namespace":"ns1", "funcname": "name1", "revision": 0, "image": "ubuntu", "commands": ["/test/rust/functest/target/debug/functest"], "envs": [], "mounts": [{"hostpath": "/home/brad/rust/Quark/test", "mountpath": "/test"}]}' \
  http://localhost:4000/funcpackages/

curl http://localhost:4000/funcpackages/t1/ns1/name1

curl --request "DELETE" http://localhost:4000/funcpackages/t1/ns1/name1

8. Call Func
  
curl --header "Content-Type: application/json" \
  --request POST \
  --data '{"tenant":"t1xxx", "xxxxx":"nsdddddd1", "dddd": "nfffffame1", "zzz": "asdfasd"}' \
  http://localhost:4000/funccall/t1/ns1/name1

9. Get FuncPods
curl http://localhost:4000/funcpods/t1/ns1/name1